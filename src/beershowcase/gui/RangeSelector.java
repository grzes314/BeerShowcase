
package beershowcase.gui;

import javax.swing.JSlider;

/**
 *
 * @author Grzegorz Łoś
 */
public class RangeSelector extends javax.swing.JPanel {

    private int minValue, maxValue;
    /**
     * Creates new form RangeSelector
     */
    public RangeSelector() {
        initComponents();
    }

    public RangeSelector(int min, int max) {
        setRange(min, max);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sliderMin = new javax.swing.JSlider();
        sliderMax = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelMin = new javax.swing.JLabel();
        labelMax = new javax.swing.JLabel();

        sliderMin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderMinStateChanged(evt);
            }
        });

        sliderMax.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderMaxStateChanged(evt);
            }
        });

        jLabel1.setText("min:");

        jLabel2.setText("max:");

        labelMin.setText("aaaa");

        labelMax.setText("bbbb");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sliderMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(labelMax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sliderMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(labelMin, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sliderMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(labelMin, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sliderMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(labelMax)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sliderMinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderMinStateChanged
        adjustIfNecessary(sliderMax, sliderMin.getValue());
        labelMin.setText("" + sliderMin.getValue());
    }//GEN-LAST:event_sliderMinStateChanged

    private void sliderMaxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderMaxStateChanged
        adjustIfNecessary(sliderMin, sliderMax.getValue());
        labelMax.setText("" + sliderMax.getValue());
    }//GEN-LAST:event_sliderMaxStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel labelMax;
    private javax.swing.JLabel labelMin;
    private javax.swing.JSlider sliderMax;
    private javax.swing.JSlider sliderMin;
    // End of variables declaration//GEN-END:variables

    public final void setRange(int min, int max) {
        if (max < min)
            max = min;
        
        minValue = min;
        maxValue = max;
        resetSlider(sliderMin, min);
        resetSlider(sliderMax, max);
    }

    private void resetSlider(JSlider slider, int val) {
        slider.setMinimum(minValue);
        slider.setMaximum(maxValue);
        slider.setValue(val);
    }
    
    public Range getRange() {
        return new Range(sliderMin.getValue(), sliderMax.getValue());
    }

    private void adjustIfNecessary(JSlider slider, int val) {
        if (sliderMax.getValue() < sliderMin.getValue()) {
            slider.setValue(val);
        }
    }
    
    public static class Range {
        public final int beg, end;

        public Range(int beg, int end) {
            this.beg = beg;
            this.end = end;
        }
    }

}
