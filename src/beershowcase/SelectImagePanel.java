
package beershowcase;

import java.awt.image.BufferedImage;
import java.io.File;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/**
 *
 * @author grzes
 */
public class SelectImagePanel extends javax.swing.JPanel {

    BufferedImage image;
    JFileChooser fileChooser = new JFileChooser();
    
    /**
     * Creates new form SelectImagePanel
     */
    public SelectImagePanel() {
        initComponents();
    }
    
    public SelectImagePanel(BufferedImage logo) {
        initComponents();
        image = logo;
        if (logo != null)
            setImageLabel(new ImageIcon(logo));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        imageLabel = new javax.swing.JLabel();
        pathSelectionPanel = new javax.swing.JPanel();
        byUrl = new javax.swing.JRadioButton();
        byPath = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        urlField = new javax.swing.JTextField();
        pathField = new javax.swing.JTextField();
        openFileButton = new javax.swing.JButton();

        jSplitPane1.setDividerLocation(100);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jScrollPane1.setViewportView(imageLabel);

        jSplitPane1.setRightComponent(jScrollPane1);

        buttonGroup1.add(byUrl);
        byUrl.setText("URL");
        byUrl.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                byUrlStateChanged(evt);
            }
        });

        buttonGroup1.add(byPath);
        byPath.setText("Local path");
        byPath.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                byPathStateChanged(evt);
            }
        });

        jLabel1.setText("Select image location");

        urlField.setEnabled(false);
        urlField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urlFieldActionPerformed(evt);
            }
        });
        urlField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                urlFieldKeyTyped(evt);
            }
        });

        pathField.setEnabled(false);
        pathField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathFieldActionPerformed(evt);
            }
        });
        pathField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pathFieldKeyTyped(evt);
            }
        });

        openFileButton.setText("...");
        openFileButton.setEnabled(false);
        openFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pathSelectionPanelLayout = new javax.swing.GroupLayout(pathSelectionPanel);
        pathSelectionPanel.setLayout(pathSelectionPanelLayout);
        pathSelectionPanelLayout.setHorizontalGroup(
            pathSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pathSelectionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 348, Short.MAX_VALUE)
                .addComponent(openFileButton)
                .addContainerGap())
            .addGroup(pathSelectionPanelLayout.createSequentialGroup()
                .addGroup(pathSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(byUrl)
                    .addComponent(byPath))
                .addGap(23, 23, 23)
                .addGroup(pathSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pathSelectionPanelLayout.createSequentialGroup()
                        .addComponent(pathField)
                        .addGap(61, 61, 61))
                    .addGroup(pathSelectionPanelLayout.createSequentialGroup()
                        .addComponent(urlField)
                        .addContainerGap())))
        );
        pathSelectionPanelLayout.setVerticalGroup(
            pathSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pathSelectionPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pathSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pathSelectionPanelLayout.createSequentialGroup()
                        .addComponent(byUrl)
                        .addGap(3, 3, 3))
                    .addComponent(urlField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pathSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pathSelectionPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(openFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pathSelectionPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(byPath))
                    .addGroup(pathSelectionPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pathField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(pathSelectionPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void byUrlStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_byUrlStateChanged
        toggleButtonChanged();
    }//GEN-LAST:event_byUrlStateChanged

    private void byPathStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_byPathStateChanged
        toggleButtonChanged();
    }//GEN-LAST:event_byPathStateChanged

    private void openFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileButtonActionPerformed
        chooseLocalPath();
    }//GEN-LAST:event_openFileButtonActionPerformed

    private void urlFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urlFieldActionPerformed
        updateImageLabel();
    }//GEN-LAST:event_urlFieldActionPerformed

    private void pathFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathFieldActionPerformed
        updateImageLabel();
    }//GEN-LAST:event_pathFieldActionPerformed

    private void urlFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_urlFieldKeyTyped
        updateImageLabel();
    }//GEN-LAST:event_urlFieldKeyTyped

    private void pathFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pathFieldKeyTyped
        updateImageLabel();
    }//GEN-LAST:event_pathFieldKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton byPath;
    private javax.swing.JRadioButton byUrl;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton openFileButton;
    private javax.swing.JTextField pathField;
    private javax.swing.JPanel pathSelectionPanel;
    private javax.swing.JTextField urlField;
    // End of variables declaration//GEN-END:variables

    
    boolean isImageChosen() {
        return image != null;
    }
    
    BufferedImage getImage() {
        return image;
    }
    
    private void toggleButtonChanged() {
        if (byUrl.isSelected()) {
            urlField.setEnabled(true);
            pathField.setEnabled(false);
            openFileButton.setEnabled(false);
            readImageFromUrl();
        } else if (byPath.isSelected()) {
            urlField.setEnabled(false);
            pathField.setEnabled(true);
            openFileButton.setEnabled(true);
            readImageFromPath();
        }
    }
    
    private void readImageFromUrl() {
        String url = urlField.getText();
        if (url.isEmpty()) {
            setImageLabel("Provide URL");
        } else {
            image = ImageUtils.getPicture(url);
            if (image == null) {
                setImageLabel("Invalid URL");
            } else {
                setImageLabel(new ImageIcon(image));
            }
        }
    }
    
    private void readImageFromPath() {
        String path = pathField.getText();
        if (path.isEmpty()) {
            setImageLabel("Provide path to file");
        } else {
            image = ImageUtils.getLocalPicture(path);
            if (image == null) {
                setImageLabel("Invalid path");
            } else {
                setImageLabel(new ImageIcon(image));
            }
        }
    }

    private void chooseLocalPath() {
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            pathField.setText(file.getAbsolutePath());
            updateImageLabel();
        }        
    }

    private void updateImageLabel() {
        if (byUrl.isSelected()) {
            readImageFromUrl();
        } else if (byPath.isSelected()) {
            readImageFromPath();
        }
    }
    
    private void setImageLabel(Icon icon) {
        imageLabel.setIcon(icon);
        imageLabel.setText("");
    }
    
    private void setImageLabel(String txt) {
        imageLabel.setIcon(null);
        imageLabel.setText(txt);
    }

    public void setInitialImage(BufferedImage logo) {
        image = logo;
        if (logo != null)
            setImageLabel(new ImageIcon(logo));
    }
}
