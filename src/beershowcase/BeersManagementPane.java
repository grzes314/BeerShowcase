
package beershowcase;

import beershowcase.beerdata.Beer;
import beershowcase.beerdata.filters.Conjunction;
import beershowcase.beerdata.filters.Filter;
import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Grzegorz Łoś
 */
public class BeersManagementPane extends javax.swing.JPanel {
    //implements BeerKnowledge.ChangeListener {
    private Filter filter = new Conjunction();
    private BeerBrowserPanel beerBrowserPanel;
    private ActiveDisplayMode displayMode = ActiveDisplayMode.Browser;
    
    private static final Logger LOGGER = Logger.getLogger(BeersManagementPane.class.getName());
    
    /**
     * Creates new form BeersManagementPane
     */
    public BeersManagementPane() {
        initComponents();
        beerBrowserPanel = new BeerBrowserPanel();
        beersViewContainer.setLayout(new BorderLayout());
        beersViewContainer.add(beerBrowserPanel);
        //RunningApplication.beerKnowledge.addChangeListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        addBeerButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        modeButton = new javax.swing.JButton();
        beersViewContainer = new javax.swing.JPanel();

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        addBeerButton.setText("Add");
        addBeerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBeerButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        modeButton.setText("<html>Go to table mode");
        modeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(addBeerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addComponent(modeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBeerButton)
                    .addComponent(editButton)
                    .addComponent(removeButton))
                .addContainerGap())
            .addComponent(modeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        beersViewContainer.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout beersViewContainerLayout = new javax.swing.GroupLayout(beersViewContainer);
        beersViewContainer.setLayout(beersViewContainerLayout);
        beersViewContainerLayout.setHorizontalGroup(
            beersViewContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        beersViewContainerLayout.setVerticalGroup(
            beersViewContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 237, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(beersViewContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(beersViewContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addBeerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBeerButtonActionPerformed
        addBeerClicked();
    }//GEN-LAST:event_addBeerButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        editBeerClicked();
    }//GEN-LAST:event_editButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        removeClicked();
    }//GEN-LAST:event_removeButtonActionPerformed

    private void modeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBeerButton;
    private javax.swing.JPanel beersViewContainer;
    private javax.swing.JButton editButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton modeButton;
    private javax.swing.JButton removeButton;
    // End of variables declaration//GEN-END:variables

    private void addBeerClicked() {
        EditBeerDialog editBeerDialog = new EditBeerDialog(RunningApplication.MainFrame);
        editBeerDialog.setLocationRelativeTo(this);
        editBeerDialog.setVisible(true);
        if (editBeerDialog.isConfirmed()) {
            Beer beer = RunningApplication.beerKnowledge.makeBeer();
            editBeerDialog.fill(beer);
            if (filter.filter(beer)) {
                addBeerToComponents(beer);
                beerBrowserPanel.showBeer(beer);
                revalidate();
                repaint();
            }
        }
    }
    
    void reset() {
        //RunningApplication.beerKnowledge.addChangeListener(this);
        addAllBeersToComponents();
        repaint();
        revalidate();
    }
    
    /*@Override
    public void knowledgeChanged(BeerKnowledge.ChangeEvent event) {
        if (!(event.affectedObject instanceof Beer))
            return;
        Beer beer = (Beer) event.affectedObject;
        
        switch (event.changeType) {
            case Addition:
                if (filter.filter(beer))
                    addBeerToComponents(beer);
                break;
            case Removal:
                if (filter.filter(beer))
                    removeBeerFromComponents(beer);
                break;
            default:
                LOGGER.log(Level.WARNING, "Not handling event of type " + event.changeType);
        }
    }*/

    private void addAllBeersToComponents() {
        ArrayList<Beer> beers = RunningApplication.beerKnowledge.getBeers();
        beerBrowserPanel.setDisplayedBeers(beers);
    }

    private void addBeerToComponents(Beer beer) {
        beerBrowserPanel.addBeer(beer);
    }

    private void removeBeerFromComponents(Beer beer) {
        ArrayList<Beer> beers = RunningApplication.beerKnowledge.getBeers(filter);
        beerBrowserPanel.setDisplayedBeers(beers);
    }
    
    private void editBeerClicked() {
        Beer beer = getSelectedBeer();
        if (beer == null) {
            JOptionPane.showMessageDialog(RunningApplication.MainFrame,
                    "Please select a beer first.");
        } else {
            openEditDialog(beer);
        }
    }
    
    private Beer getSelectedBeer() {
        if (displayMode == ActiveDisplayMode.Browser) {
            return beerBrowserPanel.getCurrBeer();
        } else {
            return null;
        }
    }    

    private void openEditDialog(Beer beer) {
        EditBeerDialog editBeerDialog = new EditBeerDialog(RunningApplication.MainFrame, beer);
        editBeerDialog.setLocationRelativeTo(this);
        editBeerDialog.setVisible(true);
        if (editBeerDialog.isConfirmed()) {
            editBeerDialog.fill(beer);
        }
    }

    private void removeClicked() {
        Beer beer = getSelectedBeer();
        if (beer == null) {
            JOptionPane.showMessageDialog(RunningApplication.MainFrame,
                    "Please select a beer first.");
        } else {
            String question = new StringBuilder()
                    .append("Are you sure you want to delete \"")
                    .append(beer.getName())
                    .append("\"?\n\nRemember you can mark this beer as not available instead.")
                    .toString();
            int res = JOptionPane.showConfirmDialog(RunningApplication.MainFrame,
                    question, "Confirm", JOptionPane.YES_NO_OPTION);
            if (res == JOptionPane.YES_OPTION) {
                RunningApplication.beerKnowledge.deleteBeer(beer);
                removeBeerFromComponents(beer);
            }
        }
    }
    
    private enum ActiveDisplayMode {
        Browser, Table
    }
}
